# This is your source file. You'll need a main.qhe file for us to compile your code.
# running test with 1 logical qubit
# Implementantion of 5-qubit EC code
# Need 5n + 4 physical qubits for n logical ones
# Convention: First 4 are ancillas other 5n encode the logical qubits
# Setting up the parameters
# n_log is number of logical qubits, n_phys is number of physical qubits
1 -> n_log
5*n_log + 4 -> n_phys
# Initialising qubits
increment j to n_phys
    j-1 -> i
    qubit -> qubit_arr.[i]
next
1 -> target_q
gosub five_q_code
# -------------------------------IMPLEMENT BELOW AS SUBROUTINE
#Should have 1 input: target qubit
#subroutine which performs error correction on target_q logical qubit
sub five_q_code
    # Hadamards on ancillas
    increment j to 4
        j-1 -> i
        h[qubit_arr.[i]]
    next
    #creating new labels
    5*target_q - 1 -> q1
    5*target_q -> q2
    5*target_q + 1 -> q3
    5*target_q + 2 -> q4
    5*target_q + 3 -> q5
    # controlled operations on ancillas and state (state is encoded in 5i, ... 5i+4),
    cnot[qubit_arr.[0], qubit_arr.[q1]]
    cz[qubit_arr.[0], qubit_arr.[q2]]
    cz[qubit_arr.[0], qubit_arr.[q3]]
    cnot[qubit_arr.[1], qubit_arr.[q2]]
    cnot[qubit_arr.[2], qubit_arr.[q1]]
    cnot[qubit_arr.[0], qubit_arr.[q4]]
    cz[qubit_arr.[1], qubit_arr.[q3]]
    cz[qubit_arr.[3], qubit_arr.[q1]]
    cz[qubit_arr.[1], qubit_arr.[q4]]
    cnot[qubit_arr.[2], qubit_arr.[q3]]
    cnot[qubit_arr.[3], qubit_arr.[q1]]
    cnot[qubit_arr.[1], qubit_arr.[q5]]
    cz[qubit_arr.[2], qubit_arr.[q4]]
    cz[qubit_arr.[2], qubit_arr.[q5]]
    cnot[qubit_arr.[3], qubit_arr.[q4]]
    cz[qubit_arr.[3], qubit_arr.[q5]]
    # Hadamards on ancillas
    increment j to 4
        j - 1 -> i
        h[qubit_arr.[i]]
    next
    # Performing syndrome measurements and storing their values
    increment j to 4
        j - 1 -> i
        measure[qubit_arr.[i]] -> measurements.[i]
    next
    # Computing Booleans in advance
    measurements.[0] == 0 -> m10
    measurements.[1] == 0 -> m20
    measurements.[2] == 0 -> m30
    measurements.[3] == 0 -> m40
    # Correction of errors
    if measurements.[0]
        if measurements.[1]
            if measurements.[2]
                if measurements.[3]
                    y[qubit_arr.[q4]]
                end
                if m40
                    y[qubit_arr.[q3]]
                end
            end
            if m30
                if measurements.[3]
                    y[qubit_arr.[q2]]
                end
                if m40
                    x[qubit_arr.[q3]]
                end
            end
        end
        if m20
            if measurements.[2]
                if measurements.[3]
                    y[qubit_arr.[q1]]
                end
                if m40
                    z[qubit_arr.[q1]]
                end
            end
            if m30
                if measurements.[3]
                    z[qubit_arr.[q4]]
                end
                if m40
                    x[qubit_arr.[q2]]
                end
            end
        end
    end
    
    if m10
        if measurements.[1]
            if measurements.[2]
                if measurements.[3]
                    y[qubit_arr.[q5]]
                end
                if m40
                    x[qubit_arr.[q4]]
                end
            end
            if m30
                if measurements.[3]
                    z[qubit_arr.[q2]]
                end
                if m40
                    z[qubit_arr.[q5]]
                end
            end
        end
        if m20
            if measurements.[2]
                if measurements.[3]
                    x[qubit_arr.[q5]]
                end
                if m40
                    z[qubit_arr.[q3]]
                end
            end
            if m30
                if measurements.[3]
                    x[qubit_arr.[q1]]
                end
            end
        end
    end
endsub